version: '3'

services:
  nginx-proxy:
    container_name: dtrafico_https
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./letsencrypt/certs:/etc/nginx/certs:ro
      - ./letsencrypt/vhostd:/etc/nginx/vhost.d
      - ./letsencrypt/html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - mynetwork

  letsencrypt:
    container_name: generador_certificados
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=dtrafico_https
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt/certs:/etc/nginx/certs:rw
      - ./letsencrypt/vhostd:/etc/nginx/vhost.d
      - ./letsencrypt/html:/usr/share/nginx/html
    networks:
      - mynetwork

  codeigniter:
    container_name: user_administrador
    image: bitnami/codeigniter:4.4.3-debian-11-r0
    ports:
      - "9000:8000"
    volumes:
      - ./codeigniter/app:/app  
    environment:
      - CODEIGNITER_PROJECT_NAME=myapp
      - CODEIGNITER_DATABASE_HOST=mariadb
      - CODEIGNITER_DATABASE_USER=myuser
      - CODEIGNITER_DATABASE_PASSWORD=mypassword
      - APP_ENV=production
      - VIRTUAL_HOST=panel.clinicalibre.cl
      - LETSENCRYPT_HOST=panel.clinicalibre.cl
      - LETSENCRYPT_EMAIL=clinicalibrechile@gmail.com
    depends_on:
      - oracle_slim
      - mysql_6
    restart: always
    networks:
      - mynetwork

  php_codeneiter_3:
    container_name: codeneite_3_app
    build:
      context: ./
      dockerfile: ./php_codeneiter/Dockerfile
    ports:
      - "9015:80"
      - "9014:443"
    restart: always  
    volumes:
      - ./php_codeneiter/html:/var/www/html/
    environment:
      - VIRTUAL_HOST=clinicalibre.cl,www.clinicalibre.cl
      - LETSENCRYPT_HOST=clinicalibre.cl,www.clinicalibre.cl
      - LETSENCRYPT_EMAIL=clinicalibrechile@gmail.com
    networks:
      - mynetwork

  codeneiter_4:
    container_name: codeneite_4_admin
    build:
      context: ./
      dockerfile: ./php/Dockerfile
    ports:
      - "9005:80"
      - "9004:443"
    restart: always  
    volumes:
      - ./php/html:/var/www/html/
    networks:
      - mynetwork
      
  oracle_slim:
    image: gvenzl/oracle-free:23.3-full
    container_name: oracle_slim
    environment:
      APP_USER: ADMIN
      APP_USER_PASSWORD: ssprueba.210
      ORACLE_DATABASE: ADMIN
      ORACLE_PASSWORD: ssprueba.210
      TARGET_PDB: FREEPDB1
      TZ: America/Santiago
    ports:
      - 6000:1521
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./oracle/init_scripts:/container-entrypoint-initdb.d
      - ./oracle/init_sql:/container-entrypoint-startdb.d
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mynetwork

  mysql_6:
    container_name: mysql_6
    image: mysql:5.7
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_spanish_ci
      - --init-connect=SET NAMES utf8mb4 COLLATE utf8mb4_spanish_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ssprueba.210
      MYSQL_DATABASE: ADMIN
      MYSQL_USER: ADMIN
      MYSQL_PASSWORD: ssprueba.210
      TZ: America/Santiago
    expose:
      - "9306"
    ports:
      - "9306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/:/docker-entrypoint-initdb.d/
    networks:
      - mynetwork          

  monitoreo_mysql:
    image: adminer
    restart: always
    ports:
      - 9100:8080
    networks:
      - mynetwork

volumes:
  oracle-data:
  db_data:

networks:
  mynetwork:
    driver: bridge
