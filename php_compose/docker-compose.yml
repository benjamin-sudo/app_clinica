version: '3.9'
services:
  #administrador
  #http://localhost:9000/administrador
  codeigniter:
    container_name: user_administrador
    image: bitnami/codeigniter:4.4.3-debian-11-r0
    ports:
      - "9000:8000"
    volumes:
      - ./codeigniter/app:/app  
    environment:
      - CODEIGNITER_PROJECT_NAME=myapp
      - CODEIGNITER_DATABASE_HOST=mariadb
      - CODEIGNITER_DATABASE_USER=myuser
      - CODEIGNITER_DATABASE_PASSWORD=mypassword
      - APP_ENV=development # Modo de desarrollo
      - ALLOW_EMPTY_PASSWORD=yes # Permitir contraseñas vacías
    depends_on:
      #- oracle_slim
      - mysql_6
    restart: always # Reiniciar_en_caso_de_fallo
    networks:
      - mynetwork

  #codeneiter_3 - app ususario respal
  #php_codeneiter_3:
    #container_name: codeneite_3_app
    #build:
      #context: ./
      #dockerfile: ./php_codeneiter/Dockerfile
    #ports:
      #- "9015:80"
      #- "9014:443"
    #restart: always  
    #volumes:
      #- ./php_codeneiter/html:/var/www/html/
    #networks:
      #- mynetwork

  php_clinica:
    container_name: php_clinica
    build:
      context: ./
      dockerfile: ./php_clinica/Dockerfile
    ports:
      - "9025:80"
      - "9026:443"
    restart: always  
    volumes:
      - ./php_clinica/html:/var/www/html/
    networks:
      - mynetwork

  #codeneiter_4 - app ususario
  #codeneiter_4:
    #container_name: codeneite_4_admin
    #build:
      #context: ./
      #dockerfile: ./php/Dockerfile
    #ports:
      #- "9005:80"
      #- "9004:443"
    #restart: always  
    #volumes:
      #- ./php/html:/var/www/html/
    #networks:
      #- mynetwork
      
  #https://hub.docker.com/r/gvenzl/oracle-free
  #oracle_slim:
    #image: gvenzl/oracle-free:23.3-full
    #image: gvenzl/oracle-free:23-slim
    #container_name: oracle_slim
    #environment:
      #APP_USER: ADMIN
      #APP_USER_PASSWORD: ssprueba.210
      #ORACLE_DATABASE: ADMIN
      #ORACLE_PASSWORD: ssprueba.210
      #TARGET_PDB: FREEPDB1
      #TZ: America/Santiago
    #ports:
      #- 6000:1521
    #volumes:
      #- oracle-data:/path/to/oracle/data
      #- ./oracle/init_scripts:/container-entrypoint-initdb.d
      #- ./oracle/init_sql:/container-entrypoint-startdb.d
    #restart: always
    #healthcheck:
      #test: ["CMD", "healthcheck.sh"]
      #interval: 10s
      #timeout: 5s
      #retries: 10
    #networks:
      #- mynetwork

  #bd_session_mysql    
  mysql_6:
    container_name: mysql_6
    image: mysql:5.7
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_spanish_ci
      - --init-connect=SET NAMES utf8mb4 COLLATE utf8mb4_spanish_ci
      - --explicit_defaults_for_timestamp=1
    restart: always
    secrets:
      - mysql_root_password
      - mysql_user_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ADMIN
      MYSQL_USER: ADMIN
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
      TZ: America/Santiago
    expose:
      - "9306"
    ports:
      - "9306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/:/docker-entrypoint-initdb.d/
    networks:
      - mynetwork          

  #toad_de_mysql
  monitoreo_mysql:
    image: adminer
    restart: always
    ports:
      - 9100:8080
    networks:
      - mynetwork

  backup_service:
    build:
      context: ./backup_service
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/mysql
      - ./backup_service/backup:/backup_service/backup
    restart: always  

secrets:
  mysql_root_password:
    file: ./secrets/root_password.txt
  mysql_user_password:
    file: ./secrets/user_password.txt

volumes:
  oracle-data:
  db_data:

networks:
  mynetwork:

